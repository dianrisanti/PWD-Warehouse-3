{"ast":null,"code":"import Axios from 'axios';\nimport { URL, CART_START, CART_END, GET_CART, CHECK_OUT } from './helper'; // get user cart\n\nexport const GetCartAction = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CART_START\n      }); // reuqest api to get user's cart data\n\n      const res = await Axios.get(URL + '/cart/get' + id);\n      console.log(res.data);\n      dispatch({\n        type: GET_CART,\n        payload: res.data\n      });\n      dispatch({\n        type: CART_END\n      });\n    } catch (err) {\n      dispatch({\n        type: CART_END\n      });\n      console.log(err.response ? err.response.data : err);\n    }\n  };\n}; // edit qty in user's cart\n\n_c = GetCartAction;\nexport const EditCartQtyAction = (user_id, id, qty, harga) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CART_START\n      }); // request api : EDIT\n\n      const res = await Axios.patch(URL + '/api/order/edit/' + id, {\n        qty,\n        total: qty * harga\n      });\n      console.log(res.data); // request api get cart data\n\n      const cart = await Axios.get(URL + '/api/order/cart/' + user_id);\n      dispatch({\n        type: GET_CART,\n        payload: cart.data\n      });\n      dispatch({\n        type: CART_END\n      });\n    } catch (err) {\n      dispatch({\n        type: CART_END\n      });\n      console.log(err.response ? err.response.data : err);\n    }\n  };\n}; // delete user's cart item\n\n_c2 = EditCartQtyAction;\nexport const DeleteCartItemAction = (user_id, id) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CART_START\n      }); // request api : DELETE\n\n      const res = await Axios.delete('http');\n      console.log(res.data); // request api get cart data\n\n      const cart = await Axios.get(URL + '/api/order/cart/' + user_id);\n      dispatch({\n        type: GET_CART,\n        payload: cart.data\n      });\n      dispatch({\n        type: CART_END\n      });\n    } catch (err) {\n      dispatch({\n        type: CART_END\n      });\n      console.log(err.response ? err.response.data : err);\n    }\n  };\n}; // checkout\n\n_c3 = DeleteCartItemAction;\nexport const ChekOutAction = (user_id, order_number) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CART_START\n      }); // request API : check out\n\n      const res = await Axios.get(URL + '/api/order/checkout/' + order_number);\n      console.log(res.data); // request api get cart data\n\n      const cart = await Axios.get(URL + '/api/order/cart/' + user_id);\n      dispatch({\n        type: CHECK_OUT,\n        payload: cart.data\n      });\n      dispatch({\n        type: CART_END\n      });\n    } catch (err) {\n      dispatch({\n        type: CART_END\n      });\n      console.log(err.response ? err.response.data : err);\n    }\n  };\n}; // add to cart\n\n_c4 = ChekOutAction;\nexport const AddToCartAction = body => {\n  return async dispatch => {\n    try {\n      const res = await Axios.post(URL + '/api/order/add', body);\n      console.log(res.data); // request api get cart data\n\n      const cart = await Axios.get(URL + '/api/order/cart/' + body.user_id);\n      dispatch({\n        type: GET_CART,\n        payload: cart.data\n      });\n    } catch (err) {\n      console.log(err.response ? err.response.data : err);\n    }\n  };\n};\n_c5 = AddToCartAction;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GetCartAction\");\n$RefreshReg$(_c2, \"EditCartQtyAction\");\n$RefreshReg$(_c3, \"DeleteCartItemAction\");\n$RefreshReg$(_c4, \"ChekOutAction\");\n$RefreshReg$(_c5, \"AddToCartAction\");","map":{"version":3,"sources":["C:/Users/knigh/Documents/PURWADHIKA JCWM/final_project/PWD-Warehouse-3/Final_Project_Group_3/Front_End/pwd_warehouse_03/src/actions/cartAction.js"],"names":["Axios","URL","CART_START","CART_END","GET_CART","CHECK_OUT","GetCartAction","id","dispatch","type","res","get","console","log","data","payload","err","response","EditCartQtyAction","user_id","qty","harga","patch","total","cart","DeleteCartItemAction","delete","ChekOutAction","order_number","AddToCartAction","body","post"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport { URL, CART_START, CART_END, GET_CART, CHECK_OUT } from './helper';\r\n\r\n// get user cart\r\nexport const GetCartAction = (id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: CART_START });\r\n\r\n            // reuqest api to get user's cart data\r\n            const res = await Axios.get(URL + '/cart/get' + id);\r\n            console.log(res.data);\r\n\r\n            dispatch({ type: GET_CART, payload: res.data });\r\n\r\n            dispatch({ type: CART_END });\r\n        } catch (err) {\r\n            dispatch({ type: CART_END });\r\n            console.log(err.response ? err.response.data : err);\r\n        }\r\n    };\r\n};\r\n\r\n// edit qty in user's cart\r\nexport const EditCartQtyAction = (user_id, id, qty, harga) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: CART_START });\r\n\r\n            // request api : EDIT\r\n            const res = await Axios.patch(URL + '/api/order/edit/' + id, {\r\n                qty,\r\n                total: qty * harga,\r\n            });\r\n            console.log(res.data);\r\n\r\n            // request api get cart data\r\n            const cart = await Axios.get(URL + '/api/order/cart/' + user_id);\r\n            dispatch({ type: GET_CART, payload: cart.data });\r\n\r\n            dispatch({ type: CART_END });\r\n        } catch (err) {\r\n            dispatch({ type: CART_END });\r\n            console.log(err.response ? err.response.data : err);\r\n        }\r\n    };\r\n};\r\n\r\n// delete user's cart item\r\nexport const DeleteCartItemAction = (user_id, id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: CART_START });\r\n\r\n            // request api : DELETE\r\n            const res = await Axios.delete('http');\r\n            console.log(res.data);\r\n\r\n            // request api get cart data\r\n            const cart = await Axios.get(URL + '/api/order/cart/' + user_id);\r\n            dispatch({ type: GET_CART, payload: cart.data });\r\n\r\n            dispatch({ type: CART_END });\r\n        } catch (err) {\r\n            dispatch({ type: CART_END });\r\n            console.log(err.response ? err.response.data : err);\r\n        }\r\n    };\r\n};\r\n\r\n// checkout\r\nexport const ChekOutAction = (user_id, order_number) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: CART_START });\r\n\r\n            // request API : check out\r\n            const res = await Axios.get(\r\n                URL + '/api/order/checkout/' + order_number,\r\n            );\r\n            console.log(res.data);\r\n\r\n            // request api get cart data\r\n            const cart = await Axios.get(URL + '/api/order/cart/' + user_id);\r\n            dispatch({ type: CHECK_OUT, payload: cart.data });\r\n\r\n            dispatch({ type: CART_END });\r\n        } catch (err) {\r\n            dispatch({ type: CART_END });\r\n            console.log(err.response ? err.response.data : err);\r\n        }\r\n    };\r\n};\r\n\r\n// add to cart\r\nexport const AddToCartAction = (body) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await Axios.post(URL + '/api/order/add', body);\r\n            console.log(res.data);\r\n\r\n            // request api get cart data\r\n            const cart = await Axios.get(\r\n                URL + '/api/order/cart/' + body.user_id,\r\n            );\r\n            dispatch({ type: GET_CART, payload: cart.data });\r\n        } catch (err) {\r\n            console.log(err.response ? err.response.data : err);\r\n        }\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}