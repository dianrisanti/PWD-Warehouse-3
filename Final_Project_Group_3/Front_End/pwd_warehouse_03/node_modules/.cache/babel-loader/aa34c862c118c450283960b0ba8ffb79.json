{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\knigh\\\\Documents\\\\PURWADHIKA JCWM\\\\final_project\\\\PWD-Warehouse-3\\\\Final_Project_Group_3\\\\Front_End\\\\pwd_warehouse_03\\\\src\\\\pages\\\\forgotPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Axios from 'axios';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Button, InputGroup, Form, FormControl, Modal } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ForgotPassword(props) {\n  _s();\n\n  console.log(props);\n  const {\n    status\n  } = useSelector(state => {\n    return {\n      status: state.user.regStatus\n    };\n  });\n  let [visible1, setVisible1] = React.useState(false);\n  let [visible2, setVisible2] = React.useState(false);\n  let [passValidErr, setPassValidErr] = React.useState([false, \"\"]);\n  let [regError, setRegError] = React.useState([false, \"\"]);\n  let [toLogin, setToLogin] = React.useState(false);\n  React.useEffect(() => {\n    async function fetchData() {\n      // NOTE get token from query url\n      let token = props.location.search.substring(1);\n\n      try {\n        let res = await Axios.post('http://localhost:2000/user/verification', {\n          token\n        });\n        console.log(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    fetchData();\n  }, []);\n  let passwordRef = React.useRef('');\n  let confpassRef = React.useRef('');\n\n  function handleRegister() {\n    let password = passwordRef.current.value;\n    let confpass = confpassRef.current.value;\n    let id = props.location.search.substring(1);\n    console.log(id);\n    if (confpass !== password) return setRegError([true, \"Password doesn't match with Confirm Password\"]);\n    if (passValidErr[0]) return setRegError([true, \"Make sure there is no error in validation\"]); // axios post untuk mengirim data ke api\n\n    Axios.post(`http://localhost:2000/user/edit_password/${id}`, {\n      password\n    }).then(res => {\n      setRegError([false, '']);\n      setToLogin(true);\n    }).catch(err => {\n      console.log(err);\n      setRegError([true, err.response.data]);\n    });\n  }\n\n  function passValid(e) {\n    // char min 6\n    // ada symbol\n    // ada angka\n    let pass = e.target.value; // console.log(pass)\n\n    let symb = /[!@#$%^&*:]/;\n    let numb = /[0-9]/; // let upper = /[A-Z]/\n\n    if (!symb.test(pass) || !numb.test(pass) || pass.length < 6) return setPassValidErr([true, \"*Must include symbol, number, min 6 char\"]);\n    setPassValidErr([false, \"\"]);\n  }\n\n  if (toLogin) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.center,\n      children: parseInt(status) === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 50,\n            textAlign: \"center\"\n          },\n          children: \" Your account has been verified\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          as: Link,\n          to: \"/\",\n          style: {\n            marginTop: 10\n          },\n          children: \"Go To Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: { ...styles.item,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => setVisible1(!visible1),\n              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                id: \"basic-addon1\",\n                style: {\n                  width: \"45px\",\n                  display: 'flex',\n                  justifyContent: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: visible1 ? \"fas fa-eye\" : \"fas fa-eye-slash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              placeholder: \"New Password\",\n              \"aria-label\": \"Password\",\n              \"aria-describedby\": \"basic-addon1\",\n              style: {\n                height: \"45px\"\n              },\n              type: visible1 ? \"text\" : \"password\",\n              ref: passwordRef,\n              onChange: e => passValid(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"mb-3\",\n            style: {\n              textAlign: \"left\",\n              color: \"red\",\n              fontSize: '10px'\n            },\n            children: passValidErr[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => setVisible2(!visible2),\n              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                id: \"basic-addon1\",\n                style: {\n                  width: \"45px\",\n                  display: 'flex',\n                  justifyContent: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: visible2 ? \"fas fa-eye\" : \"fas fa-eye-slash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              placeholder: \"Confirm New Password\",\n              \"aria-label\": \"Password\",\n              \"aria-describedby\": \"basic-addon1\",\n              style: {\n                height: \"45px\"\n              },\n              type: visible2 ? \"text\" : \"password\",\n              ref: confpassRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"mb-3\",\n            style: {\n              textAlign: \"left\",\n              color: \"red\",\n              fontSize: '10px'\n            },\n            children: passValidErr[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleRegister,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: regError[0],\n          onHide: () => setRegError([false, \"\"]),\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: regError[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => setRegError([false, \"\"]),\n              children: \"Okay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ForgotPassword, \"QWTX1uzxm7fjTOZi0hEX0NF/rmc=\", false, function () {\n  return [useSelector];\n});\n\n_c = ForgotPassword;\nconst styles = {\n  container: {\n    background: \"url(https://images.unsplash.com/photo-1506544777-64cfbe1142df?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1500&q=80) no-repeat center\",\n    backgroundSize: \"cover\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: \"100vh\"\n  },\n  center: {\n    marginTop: 100,\n    padding: \"10px 30px\",\n    width: 350,\n    height: \"68vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    border: \"1px solid gray\",\n    borderRadius: \"30px\",\n    backgroundColor: \"rgba(255, 255, 255, .7)\"\n  },\n  item: {\n    width: \"100%\",\n    height: \"auto\",\n    marginBottom: 15\n  }\n};\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["C:/Users/knigh/Documents/PURWADHIKA JCWM/final_project/PWD-Warehouse-3/Final_Project_Group_3/Front_End/pwd_warehouse_03/src/pages/forgotPassword.jsx"],"names":["React","Axios","Redirect","Link","Button","InputGroup","Form","FormControl","Modal","useSelector","ForgotPassword","props","console","log","status","state","user","regStatus","visible1","setVisible1","useState","visible2","setVisible2","passValidErr","setPassValidErr","regError","setRegError","toLogin","setToLogin","useEffect","fetchData","token","location","search","substring","res","post","data","err","passwordRef","useRef","confpassRef","handleRegister","password","current","value","confpass","id","then","catch","response","passValid","e","pass","target","symb","numb","test","length","styles","container","center","parseInt","marginTop","textAlign","item","cursor","width","display","justifyContent","height","color","fontSize","background","backgroundSize","padding","flexDirection","alignItems","border","borderRadius","backgroundColor","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Axios from 'axios'\r\nimport {\r\n    Redirect,\r\n    Link\r\n} from 'react-router-dom'\r\nimport {\r\n    Button,\r\n    InputGroup,\r\n    Form,\r\n    FormControl,\r\n    Modal\r\n} from 'react-bootstrap'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction ForgotPassword(props) {\r\n    console.log(props)\r\n    \r\n    const { status } = useSelector((state) => {\r\n        return {\r\n            status: state.user.regStatus\r\n        }\r\n    })\r\n    \r\n    let [visible1, setVisible1] = React.useState(false)\r\n    let [visible2, setVisible2] = React.useState(false)\r\n    let [passValidErr, setPassValidErr] = React.useState([false, \"\"])\r\n    let [regError, setRegError] = React.useState([false, \"\"])\r\n    let [toLogin, setToLogin] = React.useState(false)\r\n    \r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            // NOTE get token from query url\r\n            let token = props.location.search.substring(1)\r\n\r\n            try {\r\n                let res = await Axios.post('http://localhost:2000/user/verification', { token })\r\n                console.log(res.data)\r\n            }\r\n            catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n    let passwordRef = React.useRef('')\r\n    let confpassRef = React.useRef('')\r\n\r\n\r\n    function handleRegister() {\r\n        let password = passwordRef.current.value\r\n        let confpass = confpassRef.current.value\r\n        let id = props.location.search.substring(1)\r\n        console.log(id)\r\n\r\n        if (confpass !== password) return setRegError([true, \"Password doesn't match with Confirm Password\"])\r\n\r\n        if (passValidErr[0]) return setRegError([true, \"Make sure there is no error in validation\"])\r\n\r\n        // axios post untuk mengirim data ke api\r\n        Axios.post(`http://localhost:2000/user/edit_password/${id}`, { password })\r\n            .then((res) => {\r\n                setRegError([false, ''])\r\n                setToLogin(true)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setRegError([true, err.response.data])\r\n            })\r\n    }\r\n\r\n    function passValid(e) {\r\n        // char min 6\r\n        // ada symbol\r\n        // ada angka\r\n        let pass = e.target.value\r\n        // console.log(pass)\r\n        let symb = /[!@#$%^&*:]/\r\n        let numb = /[0-9]/\r\n        // let upper = /[A-Z]/\r\n\r\n        if (!symb.test(pass) || !numb.test(pass) || pass.length < 6) return setPassValidErr([true, \"*Must include symbol, number, min 6 char\"])\r\n\r\n        setPassValidErr([false, \"\"])\r\n    }\r\n\r\n    if (toLogin) return <Redirect to='/login' />\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <div style={styles.center}>\r\n                {\r\n                    parseInt(status) === 1\r\n                        ?\r\n                        <>\r\n                            <h3 style={{ marginTop: 50, textAlign: \"center\" }}> Your account has been verified</h3>\r\n                            <Button as={Link} to='/' style={{ marginTop: 10 }}>\r\n                                Go To Home\r\n            </Button>\r\n                        </>\r\n                        :\r\n\r\n\r\n                        <div>\r\n                            <div>\r\n                                <h1>Forgot Password</h1>\r\n                            </div>\r\n                            <div style={{ ...styles.item, textAlign: 'center' }}>\r\n                                <InputGroup>\r\n                                    <InputGroup.Prepend style={{ cursor: 'pointer' }}\r\n                                        onClick={() => setVisible1(!visible1)}>\r\n                                        <InputGroup.Text id=\"basic-addon1\" style={{ width: \"45px\", display: 'flex', justifyContent: 'center' }}>\r\n                                            <i className={visible1 ? \"fas fa-eye\" : \"fas fa-eye-slash\"}></i>\r\n                                        </InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl\r\n                                        placeholder=\"New Password\"\r\n                                        aria-label=\"Password\"\r\n                                        aria-describedby=\"basic-addon1\"\r\n                                        style={{ height: \"45px\" }}\r\n                                        type={visible1 ? \"text\" : \"password\"}\r\n                                        ref={passwordRef}\r\n                                        onChange={(e) => passValid(e)}\r\n                                    />\r\n                                </InputGroup>\r\n                                <Form.Text className=\"mb-3\" style={{ textAlign: \"left\", color: \"red\", fontSize: '10px' }}>\r\n                                    {passValidErr[1]}\r\n                                </Form.Text>\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <InputGroup.Prepend style={{ cursor: 'pointer' }}\r\n                                        onClick={() => setVisible2(!visible2)}>\r\n                                        <InputGroup.Text id=\"basic-addon1\" style={{ width: \"45px\", display: 'flex', justifyContent: 'center' }}>\r\n                                            <i className={visible2 ? \"fas fa-eye\" : \"fas fa-eye-slash\"}></i>\r\n                                        </InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl\r\n                                        placeholder=\"Confirm New Password\"\r\n                                        aria-label=\"Password\"\r\n                                        aria-describedby=\"basic-addon1\"\r\n                                        style={{ height: \"45px\" }}\r\n                                        type={visible2 ? \"text\" : \"password\"}\r\n                                        ref={confpassRef}\r\n                                    />\r\n                                </InputGroup>\r\n                                <Form.Text className=\"mb-3\" style={{ textAlign: \"left\", color: \"red\", fontSize: '10px' }}>\r\n                                    {passValidErr[1]}\r\n                                </Form.Text>\r\n                                <Button onClick={handleRegister}>\r\n                                    Confirm\r\n                                </Button>\r\n                            </div>\r\n                            <Modal show={regError[0]} onHide={() => setRegError([false, \"\"])}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Error</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>{regError[1]}</Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={() => setRegError([false, \"\"])}>\r\n                                        Okay\r\n                            </Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        background: \"url(https://images.unsplash.com/photo-1506544777-64cfbe1142df?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1500&q=80) no-repeat center\",\r\n        backgroundSize: \"cover\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        height: \"100vh\",\r\n    },\r\n    center: {\r\n        marginTop: 100,\r\n        padding: \"10px 30px\",\r\n        width: 350,\r\n        height: \"68vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        border: \"1px solid gray\",\r\n        borderRadius: \"30px\",\r\n        backgroundColor: \"rgba(255, 255, 255, .7)\"\r\n    },\r\n    item: {\r\n        width: \"100%\",\r\n        height: \"auto\",\r\n        marginBottom: 15,\r\n    }\r\n}\r\n\r\n\r\nexport default ForgotPassword"]},"metadata":{},"sourceType":"module"}