{"ast":null,"code":"// import React from 'react'\n// import Axios from 'axios'\n// import { connect } from 'react-redux'\n// import { Redirect } from 'react-router-dom'\n// import { login } from '../actions'\n// import { Table, Button, Form, Modal, Image } from 'react-bootstrap'\n// class CartPage extends React.Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             selectedindex: null,\n//             newQty: 0,\n//             reqPayment: false,\n//             reqPass: false,\n//             errPass: false,\n//             errPayment: false,\n//             cartEmpty: false,\n//             toHistory: false\n//         }\n//     }\n//     handledelete = (index) => {\n//         let tempcart = this.props.cart\n//         tempcart.splice(index, 1)\n//         Axios.patch(`http://localhost:2000/login/${this.props.id}`, { cart: tempcart })\n//             .then((res) => {\n//                 console.log(res.data)\n//                 Axios.get(`http://localhost:2000/login/${this.props.id}`)\n//                     .then((res) => {\n//                         this.props.login(res.data)\n//                     })\n//                     .catch((err) => console.log(err))\n//             })\n//             .catch((err) => console.log(err))\n//     }\n//     handlesave = (index) => {\n//         let tempProduct = this.props.cart[index]\n//         tempProduct.quantity = parseInt(this.state.newQty)\n//         tempProduct.total = this.state.newQty * this.props.cart[index].price\n//         let tempCart = this.props.cart\n//         tempCart.splice(index, 1, tempProduct)\n//         Axios.patch(`http://localhost:2000/login/${this.props.id}`, { cart: tempCart })\n//             .then((res) => {\n//                 console.log(res.data)\n//                 Axios.get(`http://localhost:2000/login/${this.props.id}`)\n//                     .then((res) => {\n//                         this.props.login(res.data)\n//                         this.setState({ selectedindex: null })\n//                     })\n//                     .catch((err) => console.log(err))\n//             })\n//             .catch((err) => console.log(err))\n//     }\n//     handleminus = () => {\n//         if (this.state.newQty <= 0) return\n//         this.setState({ newQty: this.state.newQty - 1 })\n//     }\n//     changeQty = (e) => {\n//         this.setState({ newQty: e.target.value })\n//     }\n//     totalprice = () => {\n//         let counter = 0\n//         this.props.cart.map(item => counter += item.total)  \n//         return counter\n//     }\n//     checkout = () => {\n//         if (this.props.cart.length === 0) return this.setState({ cartEmpty: true })\n//         this.setState({ reqPass: true })\n//     }\n//     confPayment = () => {\n//         let nominal = this.refs.payment.value\n//         let total = this.totalprice()\n//         if (nominal < total) return this.setState({ errPayment: true })\n//         let history = {\n//             username: this.props.username,\n//             date: new Date().toLocaleString(),\n//             total: total,\n//             product: this.props.cart\n//         }\n//         console.log(history)\n//         Axios.post('http://localhost:2000/history', history)\n//             .then((res) => {\n//                 console.log(res.data)\n//                 Axios.patch(`http://localhost:2000/login/${this.props.id}`, { cart: [] })\n//                     .then((res) => {\n//                         console.log(res.data)\n//                         Axios.get(`http://localhost:2000/login/${this.props.id}`)\n//                             .then((res) => {\n//                                 console.log(res.data)\n//                                 this.props.login(res.data)\n//                                 this.setState({ reqPayment: false, toHistory: true })\n//                             })\n//                             .catch((err) => console.log(err))\n//                     })\n//                     .catch((err) => console.log(err))\n//             })\n//             .catch((err) => console.log(err))\n//     }\n//     confPass = () => {\n//         let pass = this.refs.pass.value\n//         if (pass !== this.props.pass) return this.setState({ errPass: true })\n//         this.setState({ reqPayment: true, reqPass: false })\n//     }\n//     renderTHead = () => {\n//         return (\n//             <thead style={{ backgroundColor: '#2f3640', textAlign: 'center' }}>\n//                 <tr>\n//                     <th>No</th>\n//                     <th>Name</th>\n//                     <th>Image</th>\n//                     <th>Size</th>\n//                     <th>Price</th>\n//                     <th>Quantity</th>\n//                     <th>Total</th>\n//                     <th>Action</th>\n//                 </tr>\n//             </thead>\n//         )\n//     }\n//     renderTBody = () => {\n//         return (\n//             <tbody>\n//                 {this.props.cart.map((item, index) => {\n//                     if (this.state.selectedindex === index) {\n//                         return (\n//                             <tr>\n//                                 <td style={{ textAlign: 'center' }}>{index + 1}</td>\n//                                 <td>{item.name}</td>\n//                                 <td style={{ textAlign: 'center' }}>\n//                                     <Image style={{ width: 60, height: 60 }} src={item.image} rounded />\n//                                 </td>\n//                                 <td style={{ textAlign: 'center' }}>{item.size}</td>\n//                                 <td style={{ textAlign: 'right' }}>IDR {item.price.toLocaleString()}</td>\n//                                 <td style={{ textAlign: 'center', display: 'flex', justifyContent: 'center' }}>\n//                                     <div style={{ display: 'flex', justifyContent: 'center' }}>\n//                                         <Button variant=\"outline-primary\" onClick={this.handleminus}>\n//                                             ➖\n//                                         </Button>\n//                                         <Form.Control style={{ width: '100px' }} onChange={(e) => this.changeQty(e)} value={this.state.newQty} min={0} />\n//                                         <Button variant=\"outline-primary\" onClick={() => this.setState({ newQty: parseInt(this.state.newQty) + 1 })}>\n//                                             ➕\n//                                         </Button>\n//                                     </div>\n//                                 </td>\n//                                 <td style={{ textAlign: 'right' }}>IDR {(this.state.newQty * item.price).toLocaleString()}</td>\n//                                 <td style={{ textAlign: 'center' }}>\n//                                     <Button style={{ marginRight: '10px' }} variant=\"outline-success\" onClick={() => this.handlesave(index)}>✔</Button>\n//                                     <Button variant=\"outline-danger\" onClick={() => this.setState({ selectedindex: null })}>❌</Button>\n//                                 </td>\n//                             </tr>\n//                         )\n//                     }\n//                     return (\n//                         <tr key={index}>\n//                             <td style={{ textAlign: 'center' }}>{index + 1}</td>\n//                             <td>{item.name}</td>\n//                             <td style={{ textAlign: 'center' }}>\n//                                 <Image style={{ width: 60, height: 60 }} src={item.image} rounded />\n//                             </td>\n//                             <td style={{ textAlign: 'center' }}>{item.size}</td>\n//                             <td style={{ textAlign: 'right' }}>IDR {item.price.toLocaleString()}</td>\n//                             <td style={{ textAlign: 'right' }}>{item.quantity}</td>\n//                             <td style={{ textAlign: 'right' }}>IDR {item.total.toLocaleString()}</td>\n//                             <td style={{ textAlign: 'center' }}>\n//                                 <Button style={{ marginRight: '10px' }} variant=\"success\" onClick={() => this.setState({ selectedindex: index, newQty: item.quantity })}>Edit</Button>\n//                                 <Button variant=\"danger\" onClick={() => this.handledelete(index)}>Delete</Button>\n//                             </td>\n//                         </tr>\n//                     )\n//                 })}\n//             </tbody>\n//         )\n//     }\n//     render() {\n//         const { reqPayment, reqPass, errPass, errPayment, cartEmpty, toHistory } = this.state\n//         if (!this.props.id) return <Redirect to='/login' />\n//         if (toHistory) return <Redirect to='/history' />\n//         return (\n//             <div style={{ padding: '25px' }}>\n//                 <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n//                     <h1 style={{ color: 'white', fontFamily: 'Acme, sans-serif', fontSize: '42px' }}> Your Cart</h1>\n//                     <Button style={{ height: '50px' }} onClick={this.checkout} variant=\"outline-info\">Checkout</Button>\n//                 </div>\n//                 <Table striped bordered hover variant=\"dark\" style={{ marginTop: '15px' }}>\n//                     {this.renderTHead()}\n//                     {this.renderTBody()}\n//                 </Table>\n//                 <h1 style={{ textAlign: 'right', color: 'white' }}>Total: IDR {this.totalprice().toLocaleString()}</h1>\n//                 <Modal show={reqPayment} onHide={() => this.setState({ reqPayment: false })}>\n//                     <Modal.Header closeButton>\n//                         <Modal.Title>Payment</Modal.Title>\n//                     </Modal.Header>\n//                     <Modal.Body>\n//                         <Form.Control ref=\"payment\" type=\"number\" placeholder=\"Tolong Masukan Jumlah Uang Untuk Pembayaran:\" />\n//                     </Modal.Body>\n//                     <Modal.Footer>\n//                         <Button variant=\"secondary\" onClick={() => this.setState({ reqPayment: false })}>\n//                             Close\n//                         </Button>\n//                         <Button variant=\"primary\" onClick={this.confPayment} >\n//                             Confirm\n//                         </Button>\n//                     </Modal.Footer>\n//                 </Modal>\n//                 <Modal show={errPayment} onHide={() => this.setState({ errPayment: false })}>\n//                     <Modal.Header closeButton>\n//                         <Modal.Title>Error!</Modal.Title>\n//                     </Modal.Header>\n//                     <Modal.Body>Jumlah Uang Kurang Dari Total Cart</Modal.Body>\n//                     <Modal.Footer>\n//                         <Button variant=\"secondary\" onClick={() => this.setState({ errPayment: false })}>\n//                             Close\n//                         </Button>\n//                     </Modal.Footer>\n//                 </Modal>\n//                 <Modal show={reqPass} onHide={() => this.setState({ reqPass: false })}>\n//                     <Modal.Header closeButton>\n//                         <Modal.Title>Confirmation</Modal.Title>\n//                     </Modal.Header>\n//                     <Modal.Body>\n//                         <Form.Control ref=\"pass\" type=\"password\" placeholder=\"Tolong Masukan Password Untuk Melanjutkan Pembayaran:\" />\n//                     </Modal.Body>\n//                     <Modal.Footer>\n//                         <Button variant=\"secondary\" onClick={() => this.setState({ reqPass: false })}>\n//                             Close\n//                         </Button>\n//                         <Button variant=\"primary\" onClick={this.confPass} >\n//                             Confirm\n//                         </Button>\n//                     </Modal.Footer>\n//                 </Modal>\n//                 <Modal show={errPass} onHide={() => this.setState({ errPass: false })}>\n//                     <Modal.Header closeButton>\n//                         <Modal.Title>Error!</Modal.Title>\n//                     </Modal.Header>\n//                     <Modal.Body>Wrong Password</Modal.Body>\n//                     <Modal.Footer>\n//                         <Button variant=\"secondary\" onClick={() => this.setState({ errPass: false })}>\n//                             Close\n//                         </Button>\n//                     </Modal.Footer>\n//                 </Modal>\n//                 <Modal show={cartEmpty} onHide={() => this.setState({ cartEmpty: false })}>\n//                     <Modal.Header closeButton>\n//                         <Modal.Title>Error!</Modal.Title>\n//                     </Modal.Header>\n//                     <Modal.Body>Make Sure Your Cart Is Not Empty!</Modal.Body>\n//                     <Modal.Footer>\n//                         <Button variant=\"secondary\" onClick={() => this.setState({ cartEmpty: false })}>\n//                             Close\n//                         </Button>\n//                     </Modal.Footer>\n//                 </Modal>\n//             </div>\n//         )\n//     }\n// }\n// const mapStateToProps = (state) => {\n//     return {\n//         cart: state.login.cart,\n//         id: state.login.id,\n//         pass: state.login.password,\n//         username: state.login.username\n//     }\n// }\n// export default connect(mapStateToProps, { login })(CartPage)","map":{"version":3,"sources":["C:/Users/knigh/Documents/PURWADHIKA JCWM/final_project/PWD-Warehouse-3/Final_Project_Group_3/Front_End/pwd_warehouse_03/src/pages/cart.js"],"names":[],"mappingssourcesContent":["// import React from 'react'\r\n// import Axios from 'axios'\r\n// import { connect } from 'react-redux'\r\n// import { Redirect } from 'react-router-dom'\r\n\r\n// import { login } from '../actions'\r\n\r\n// import { Table, Button, Form, Modal, Image } from 'react-bootstrap'\r\n\r\n// class CartPage extends React.Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.state = {\r\n//             selectedindex: null,\r\n//             newQty: 0,\r\n//             reqPayment: false,\r\n//             reqPass: false,\r\n//             errPass: false,\r\n//             errPayment: false,\r\n//             cartEmpty: false,\r\n//             toHistory: false\r\n//         }\r\n//     }\r\n//     handledelete = (index) => {\r\n//         let tempcart = this.props.cart\r\n//         tempcart.splice(index, 1)\r\n//         Axios.patch(`http://localhost:2000/login/${this.props.id}`, { cart: tempcart })\r\n//             .then((res) => {\r\n//                 console.log(res.data)\r\n//                 Axios.get(`http://localhost:2000/login/${this.props.id}`)\r\n//                     .then((res) => {\r\n//                         this.props.login(res.data)\r\n//                     })\r\n//                     .catch((err) => console.log(err))\r\n//             })\r\n//             .catch((err) => console.log(err))\r\n//     }\r\n//     handlesave = (index) => {\r\n//         let tempProduct = this.props.cart[index]\r\n//         tempProduct.quantity = parseInt(this.state.newQty)\r\n//         tempProduct.total = this.state.newQty * this.props.cart[index].price\r\n//         let tempCart = this.props.cart\r\n//         tempCart.splice(index, 1, tempProduct)\r\n//         Axios.patch(`http://localhost:2000/login/${this.props.id}`, { cart: tempCart })\r\n//             .then((res) => {\r\n//                 console.log(res.data)\r\n//                 Axios.get(`http://localhost:2000/login/${this.props.id}`)\r\n//                     .then((res) => {\r\n//                         this.props.login(res.data)\r\n//                         this.setState({ selectedindex: null })\r\n//                     })\r\n//                     .catch((err) => console.log(err))\r\n//             })\r\n//             .catch((err) => console.log(err))\r\n//     }\r\n//     handleminus = () => {\r\n//         if (this.state.newQty <= 0) return\r\n\r\n//         this.setState({ newQty: this.state.newQty - 1 })\r\n//     }\r\n//     changeQty = (e) => {\r\n//         this.setState({ newQty: e.target.value })\r\n//     }\r\n//     totalprice = () => {\r\n//         let counter = 0\r\n//         this.props.cart.map(item => counter += item.total)  \r\n//         return counter\r\n//     }\r\n//     checkout = () => {\r\n//         if (this.props.cart.length === 0) return this.setState({ cartEmpty: true })\r\n//         this.setState({ reqPass: true })\r\n//     }\r\n//     confPayment = () => {\r\n//         let nominal = this.refs.payment.value\r\n//         let total = this.totalprice()\r\n//         if (nominal < total) return this.setState({ errPayment: true })\r\n//         let history = {\r\n//             username: this.props.username,\r\n//             date: new Date().toLocaleString(),\r\n//             total: total,\r\n//             product: this.props.cart\r\n//         }\r\n//         console.log(history)\r\n//         Axios.post('http://localhost:2000/history', history)\r\n//             .then((res) => {\r\n//                 console.log(res.data)\r\n//                 Axios.patch(`http://localhost:2000/login/${this.props.id}`, { cart: [] })\r\n//                     .then((res) => {\r\n//                         console.log(res.data)\r\n//                         Axios.get(`http://localhost:2000/login/${this.props.id}`)\r\n//                             .then((res) => {\r\n//                                 console.log(res.data)\r\n//                                 this.props.login(res.data)\r\n//                                 this.setState({ reqPayment: false, toHistory: true })\r\n//                             })\r\n//                             .catch((err) => console.log(err))\r\n//                     })\r\n//                     .catch((err) => console.log(err))\r\n//             })\r\n//             .catch((err) => console.log(err))\r\n//     }\r\n//     confPass = () => {\r\n//         let pass = this.refs.pass.value\r\n//         if (pass !== this.props.pass) return this.setState({ errPass: true })\r\n//         this.setState({ reqPayment: true, reqPass: false })\r\n//     }\r\n//     renderTHead = () => {\r\n//         return (\r\n//             <thead style={{ backgroundColor: '#2f3640', textAlign: 'center' }}>\r\n//                 <tr>\r\n//                     <th>No</th>\r\n//                     <th>Name</th>\r\n//                     <th>Image</th>\r\n//                     <th>Size</th>\r\n//                     <th>Price</th>\r\n//                     <th>Quantity</th>\r\n//                     <th>Total</th>\r\n//                     <th>Action</th>\r\n//                 </tr>\r\n//             </thead>\r\n//         )\r\n//     }\r\n//     renderTBody = () => {\r\n//         return (\r\n//             <tbody>\r\n//                 {this.props.cart.map((item, index) => {\r\n//                     if (this.state.selectedindex === index) {\r\n//                         return (\r\n//                             <tr>\r\n//                                 <td style={{ textAlign: 'center' }}>{index + 1}</td>\r\n//                                 <td>{item.name}</td>\r\n//                                 <td style={{ textAlign: 'center' }}>\r\n//                                     <Image style={{ width: 60, height: 60 }} src={item.image} rounded />\r\n//                                 </td>\r\n//                                 <td style={{ textAlign: 'center' }}>{item.size}</td>\r\n//                                 <td style={{ textAlign: 'right' }}>IDR {item.price.toLocaleString()}</td>\r\n//                                 <td style={{ textAlign: 'center', display: 'flex', justifyContent: 'center' }}>\r\n//                                     <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n//                                         <Button variant=\"outline-primary\" onClick={this.handleminus}>\r\n//                                             ➖\r\n//                                         </Button>\r\n//                                         <Form.Control style={{ width: '100px' }} onChange={(e) => this.changeQty(e)} value={this.state.newQty} min={0} />\r\n//                                         <Button variant=\"outline-primary\" onClick={() => this.setState({ newQty: parseInt(this.state.newQty) + 1 })}>\r\n//                                             ➕\r\n//                                         </Button>\r\n//                                     </div>\r\n//                                 </td>\r\n//                                 <td style={{ textAlign: 'right' }}>IDR {(this.state.newQty * item.price).toLocaleString()}</td>\r\n//                                 <td style={{ textAlign: 'center' }}>\r\n//                                     <Button style={{ marginRight: '10px' }} variant=\"outline-success\" onClick={() => this.handlesave(index)}>✔</Button>\r\n//                                     <Button variant=\"outline-danger\" onClick={() => this.setState({ selectedindex: null })}>❌</Button>\r\n//                                 </td>\r\n//                             </tr>\r\n//                         )\r\n//                     }\r\n//                     return (\r\n//                         <tr key={index}>\r\n//                             <td style={{ textAlign: 'center' }}>{index + 1}</td>\r\n//                             <td>{item.name}</td>\r\n//                             <td style={{ textAlign: 'center' }}>\r\n//                                 <Image style={{ width: 60, height: 60 }} src={item.image} rounded />\r\n//                             </td>\r\n//                             <td style={{ textAlign: 'center' }}>{item.size}</td>\r\n//                             <td style={{ textAlign: 'right' }}>IDR {item.price.toLocaleString()}</td>\r\n//                             <td style={{ textAlign: 'right' }}>{item.quantity}</td>\r\n//                             <td style={{ textAlign: 'right' }}>IDR {item.total.toLocaleString()}</td>\r\n//                             <td style={{ textAlign: 'center' }}>\r\n//                                 <Button style={{ marginRight: '10px' }} variant=\"success\" onClick={() => this.setState({ selectedindex: index, newQty: item.quantity })}>Edit</Button>\r\n//                                 <Button variant=\"danger\" onClick={() => this.handledelete(index)}>Delete</Button>\r\n//                             </td>\r\n//                         </tr>\r\n//                     )\r\n//                 })}\r\n//             </tbody>\r\n//         )\r\n//     }\r\n//     render() {\r\n//         const { reqPayment, reqPass, errPass, errPayment, cartEmpty, toHistory } = this.state\r\n//         if (!this.props.id) return <Redirect to='/login' />\r\n//         if (toHistory) return <Redirect to='/history' />\r\n//         return (\r\n//             <div style={{ padding: '25px' }}>\r\n//                 <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n//                     <h1 style={{ color: 'white', fontFamily: 'Acme, sans-serif', fontSize: '42px' }}> Your Cart</h1>\r\n//                     <Button style={{ height: '50px' }} onClick={this.checkout} variant=\"outline-info\">Checkout</Button>\r\n//                 </div>\r\n//                 <Table striped bordered hover variant=\"dark\" style={{ marginTop: '15px' }}>\r\n//                     {this.renderTHead()}\r\n//                     {this.renderTBody()}\r\n//                 </Table>\r\n//                 <h1 style={{ textAlign: 'right', color: 'white' }}>Total: IDR {this.totalprice().toLocaleString()}</h1>\r\n//                 <Modal show={reqPayment} onHide={() => this.setState({ reqPayment: false })}>\r\n//                     <Modal.Header closeButton>\r\n//                         <Modal.Title>Payment</Modal.Title>\r\n//                     </Modal.Header>\r\n//                     <Modal.Body>\r\n//                         <Form.Control ref=\"payment\" type=\"number\" placeholder=\"Tolong Masukan Jumlah Uang Untuk Pembayaran:\" />\r\n//                     </Modal.Body>\r\n//                     <Modal.Footer>\r\n//                         <Button variant=\"secondary\" onClick={() => this.setState({ reqPayment: false })}>\r\n//                             Close\r\n//                         </Button>\r\n//                         <Button variant=\"primary\" onClick={this.confPayment} >\r\n//                             Confirm\r\n//                         </Button>\r\n//                     </Modal.Footer>\r\n//                 </Modal>\r\n//                 <Modal show={errPayment} onHide={() => this.setState({ errPayment: false })}>\r\n//                     <Modal.Header closeButton>\r\n//                         <Modal.Title>Error!</Modal.Title>\r\n//                     </Modal.Header>\r\n//                     <Modal.Body>Jumlah Uang Kurang Dari Total Cart</Modal.Body>\r\n//                     <Modal.Footer>\r\n//                         <Button variant=\"secondary\" onClick={() => this.setState({ errPayment: false })}>\r\n//                             Close\r\n//                         </Button>\r\n//                     </Modal.Footer>\r\n//                 </Modal>\r\n//                 <Modal show={reqPass} onHide={() => this.setState({ reqPass: false })}>\r\n//                     <Modal.Header closeButton>\r\n//                         <Modal.Title>Confirmation</Modal.Title>\r\n//                     </Modal.Header>\r\n//                     <Modal.Body>\r\n//                         <Form.Control ref=\"pass\" type=\"password\" placeholder=\"Tolong Masukan Password Untuk Melanjutkan Pembayaran:\" />\r\n//                     </Modal.Body>\r\n//                     <Modal.Footer>\r\n//                         <Button variant=\"secondary\" onClick={() => this.setState({ reqPass: false })}>\r\n//                             Close\r\n//                         </Button>\r\n//                         <Button variant=\"primary\" onClick={this.confPass} >\r\n//                             Confirm\r\n//                         </Button>\r\n//                     </Modal.Footer>\r\n//                 </Modal>\r\n//                 <Modal show={errPass} onHide={() => this.setState({ errPass: false })}>\r\n//                     <Modal.Header closeButton>\r\n//                         <Modal.Title>Error!</Modal.Title>\r\n//                     </Modal.Header>\r\n//                     <Modal.Body>Wrong Password</Modal.Body>\r\n//                     <Modal.Footer>\r\n//                         <Button variant=\"secondary\" onClick={() => this.setState({ errPass: false })}>\r\n//                             Close\r\n//                         </Button>\r\n//                     </Modal.Footer>\r\n//                 </Modal>\r\n//                 <Modal show={cartEmpty} onHide={() => this.setState({ cartEmpty: false })}>\r\n//                     <Modal.Header closeButton>\r\n//                         <Modal.Title>Error!</Modal.Title>\r\n//                     </Modal.Header>\r\n//                     <Modal.Body>Make Sure Your Cart Is Not Empty!</Modal.Body>\r\n//                     <Modal.Footer>\r\n//                         <Button variant=\"secondary\" onClick={() => this.setState({ cartEmpty: false })}>\r\n//                             Close\r\n//                         </Button>\r\n//                     </Modal.Footer>\r\n//                 </Modal>\r\n//             </div>\r\n\r\n//         )\r\n//     }\r\n// }\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         cart: state.login.cart,\r\n//         id: state.login.id,\r\n//         pass: state.login.password,\r\n//         username: state.login.username\r\n//     }\r\n// }\r\n// export default connect(mapStateToProps, { login })(CartPage)"]},"metadata":{},"sourceType":"module"}